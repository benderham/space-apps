/**
 * Mixins
 */
@mixin reset-list {
  padding: 0;
  margin: 0;
  list-style: none;
  list-style-image: none;
}

@mixin vertical-align {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}

@mixin background-opacity($color, $opacity: 0.3) {
  background: $color; /* The Fallback */
  background: rgba($color, $opacity);
}

@mixin hide-text($height: null) {
  overflow: hidden;
  text-indent: 150%;
  white-space: nowrap;

  @if $height {
    @warn "The 'hide-text' mixin has changed and no longer requires a height.";
  }
}

/**
 * REM font size with px fallback.
 */
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

/**
 * SVG background images with PNG and retina fallback
 */
$image-path: '../images' !default;
$fallback-extension: 'png' !default;
$retina-suffix: '@2x';
@mixin background-image($name, $size:false){
  background-image: url(#{$image-path}/#{$name}.svg);
  @if($size){
    background-size: $size;
  }
  .no-svg &{
    background-image: url(#{$image-path}/#{$name}.#{$fallback-extension});

    @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-moz-min-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx) {
      background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.#{$fallback-extension});
    }
  }
}

/**
 * Background PNG and retina fallback
 */
$image-path: '../images' !default;
$retina-suffix: '@2x';
@mixin hires-image($name, $size:false){
  background-image: url(#{$image-path}/#{$name}.png);
  @if($size){
    background-size: $size;
  }
  @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-moz-min-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx) {
    background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.png);
  }
}
/* 
  Hovering animation
*/

@keyframes hoverAnimation {
  0% { transform: translate(0, 0px)}
  100% { transform: translate(0, -50px)}
}
/**
 * Material Design Style Shadoes
 * Takes arguments 0 to 5, 0 being just no shadow.
 * usage:   @include mdShadowLevel(1);
 */
@mixin mdShadowLevel($level) {
  @if ($level == 5) {
    box-shadow: 0px 40px 70px 0px rgba(0, 0, 0, 0.22),0px 27px 24px 0px rgba(0, 0, 0, 0.2);
  } @else if ($level == 4){
    box-shadow: 0px 25px 55px 0px rgba(0, 0, 0, 0.21),0px 16px 28px 0px rgba(0, 0, 0, 0.22);
  } @else if ($level == 3){
    box-shadow: 0px 17px 50px 0px rgba(0, 0, 0, 0.19),0px 12px 15px 0px rgba(0, 0, 0, 0.24);
  } @else if ($level == 2){
    box-shadow: 0px 6px 20px 0px rgba(0, 0, 0, 0.19),0px 8px 17px 0px rgba(0, 0, 0, 0.2);
  }  @else if ($level == 1){
    box-shadow: 0px 2px 10px 0px rgba(0, 0, 0, 0.16),0px 2px 5px 0px rgba(0, 0, 0, 0.26);
  } @else{ // Aka Level 0:
    box-shadow: none;
  } 
}